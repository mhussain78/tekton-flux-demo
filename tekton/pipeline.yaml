apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: tekton-flux-demo
spec:
  description: |
    This pipeline clones a git repo and runs testcontainers tests.
  params:
    - name: app-subdirectory
      type: string
    - name: repo-url
      type: string
    - name: image-reference
      type: string
    - name: image-tag
      type: string
    - name: manifest-repo
      type: string
    - name: manifest-subdirectory
      type: string
    - name: git-email
      type: string
    - name: git-username
      type: string

  workspaces:
    - name: shared-data
    - name: docker-credentials
    - name: maven-settings
    - name: maven-local-m2

  tasks:
    - name: fetch-source
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-data
      params:
        - name: url
          value: $(params.repo-url)
        - name: deleteExisting
          value: "true"
        - name: subdirectory
          value: $(params.app-subdirectory)

    - name: list-source
      runAfter: [ "fetch-source" ]
      taskRef:
        name: list-source
      workspaces:
        - name: source
          workspace: shared-data

    - name: build-and-test
      taskRef:
        name: maven-with-sidecar
      runAfter: [ "list-source" ]
      params:
        - name: CONTEXT_DIR
          value: $(params.app-subdirectory)
        - name: MAVEN_IMAGE
          value: maven:3-eclipse-temurin-17-alpine
        - name: GOALS
          value:
            - clean
            - package
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-data
        - name: maven-local-repo
          workspace: maven-local-m2
        - name: dockerconfig
          workspace: docker-credentials

#    - name: build-and-push-image
#      runAfter: [ "build-and-test" ]
#      taskRef:
#        name: kaniko
#      workspaces:
#        - name: source
#          workspace: shared-data
#        - name: dockerconfig
#          workspace: docker-credentials
#      params:
#        - name: IMAGE
#          value: $(params.image-reference):$(params.image-tag)
#        - name: CONTEXT
#          value: $(params.app-subdirectory)
#
#    - name: fetch-manifest
#      runAfter: [ "build-and-push-image" ]
#      taskRef:
#        name: git-clone
#      workspaces:
#        - name: output
#          workspace: shared-data
#      params:
#        - name: url
#          value: $(params.manifest-repo)
#        - name: deleteExisting
#          value: "true"
#        - name: subdirectory
#          value: $(params.manifest-subdirectory)
#
#    - name: update-manifest
#      runAfter: [ "fetch-manifest" ]
#      taskRef:
#        name: update-manifest
#      workspaces:
#        - name: source
#          workspace: shared-data
#      params:
#        - name: file-path
#          value: flux/deployment.yaml
#        - name: repo-location
#          value: $(params.manifest-subdirectory)
#        - name: email
#          value: $(params.git-email)
#        - name: username
#          value: $(params.git-username)
#        - name: new-tag
#          value: $(params.image-reference):$(params.image-tag)